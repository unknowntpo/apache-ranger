name: Publish Docker Image

on:
  push:
    tags:
    - 'v*'
jobs:
  build-and-publish-ranger-release:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: $HOME/repo

    timeout-minutes: 120
    env:
      input_token: ${{ github.event.inputs.token }}
      secrets_token: ${{ secrets.PUBLISH_DOCKER_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
      - name: Create user and set permissions
        run: |
          sudo useradd ranger
          ls -la .
          # sudo passwd -d ranger
          # sudo usermod -aG sudo ranger
          # sudo chown -R ranger:ranger "$HOME"
      - name: Verify user creation
        run: |
          id ranger
          # ls -l /home/ranger
      - name: Build and run Docker Compose
        run: |
          cd dev-support/ranger-docker

          # peek users
          cat /etc/passwd

          # grant permission because docker-compose will mount on .m2
          sudo mkdir -p $HOME/.m2/repository
          sudo chown -R ranger:ranger $HOME/.m2

          # set some env
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          export RANGER_DB_TYPE=mysql

          # start building jar files
          docker-compose -f docker-compose.ranger-base.yml -f docker-compose.ranger-build.yml up
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          body: "Automated release for commit ${{ github.ref_name }}"
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/*
          asset_name: $(basename ${{ runner.path }})
          asset_content_type: application/octet-stream
